(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    418558,       8668]
NotebookOptionsPosition[    416191,       8582]
NotebookOutlinePosition[    416536,       8597]
CellTagsIndexPosition[    416493,       8594]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test HHGraphicLabel (and AbsoluteOptions)", "Title",
 CellChangeTimes->{{3.687604732511359*^9, 3.687604733970443*^9}, {
  3.6876047973220663`*^9, 3.687604811207861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testGr", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "*", "2", " ", "Pi"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6876048172352057`*^9, 3.687604837703376*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
       "]]},
     Annotation[#, "Charting`Private`Tag$985#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.687604840681546*^9, 3.6876100306383953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Playing Around", "Section",
 CellChangeTimes->{{3.6876049905721197`*^9, 3.687604998333564*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteOptions", "[", "testGr", "]"}]], "Input",
 CellChangeTimes->{{3.687604843064683*^9, 3.687604871747323*^9}, {
  3.687605644916546*^9, 3.6876056538900595`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.6180339887498948`"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "None"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`"}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0.], 
              StyleBox[RectangleBox[{0, -1}, {2, 1}],
               FontColor->GrayLevel[0.]]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0.]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0.],
         Editable->False,
         Selectable->False], ",", 
        RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0.], 
              StyleBox[RectangleBox[{0, -1}, {2, 1}],
               FontColor->GrayLevel[0.]]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0.]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0.],
         Editable->False,
         Selectable->False], ",", 
        RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False", ",", "False"}], "}"}]}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "None", ",", "None", ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], Opacity[0.4], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`, 0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "GrayLevel[0.5, 0.4]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.4; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5, 0.4],
      Editable->False,
      Selectable->False], "]"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"DefaultBoundaryStyle\"\>", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"\<\"DefaultMeshStyle\"\>", "\[Rule]", 
       RowBox[{"AbsolutePointSize", "[", "6.`", "]"}]}], ",", 
      RowBox[{"\<\"ScalingFunctions\"\>", "\[Rule]", "None"}], ",", 
      RowBox[{"\<\"CoordinatesToolOptions\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\<\"DisplayFunction\"\>", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                  "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                  "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "]"}]}], "}"}], "&"}], ")"}]}], ",", 
         RowBox[{"\<\"CopiedValueFunction\"\>", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                  "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                  "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "]"}]}], "}"}], "&"}], ")"}]}]}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.9999968914310025`"}], ",", "0.9999975297451876`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", "0.02`", "]"}], ",", 
        RowBox[{"Scaled", "[", "0.02`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", "0.05`", "]"}], ",", 
        RowBox[{"Scaled", "[", "0.05`", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5`", ",", "0.5`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.`", ",", "1.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5`", ",", "1.5`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.`", ",", "2.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.5`", ",", "2.5`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.`", ",", "3.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.5`", ",", "3.5`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4.`", ",", "4.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.2`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.30000000000000004`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.4`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.6`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.7`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.2`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.3`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.4`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.6`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.7`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.8`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.9`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.2`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.3`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.4`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.6`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.7`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.8`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.9`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.1`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.2`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.3`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.4`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.6`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.7`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.8`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.9`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.`"}], ",", 
          RowBox[{"-", "1.`"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.75`"}], ",", 
          RowBox[{"-", "0.75`"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5`"}], ",", 
          RowBox[{"-", "0.5`"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.25`"}], ",", 
          RowBox[{"-", "0.25`"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.25`", ",", "0.25`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5`", ",", "0.5`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75`", ",", "0.75`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.`", ",", "1.`", ",", 
          RowBox[{"{", 
           RowBox[{"0.00625`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.25`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.95`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.9`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.85`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.7`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.65`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.6`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.55`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.45`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.4`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.35`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.15`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.09999999999999998`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.04999999999999999`"}], ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.05`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.15000000000000002`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.2`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.3`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.35`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.4`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.55`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.6`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None,
                ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAw8IGwAgOI/R/IhBJ8
DP//A1m8IB7j4GEzMIPo/zBnciFLMQIA+71KAw==\
\>"]],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.65`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.7`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.95`", ",", "\<\"\"\>", ",", 
          RowBox[{"{", 
           RowBox[{"0.00375`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {GrayLevel[0.], 
                  StyleBox[RectangleBox[{0, -1}, {2, 1}],
                   FontColor->GrayLevel[0.]]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->GrayLevel[0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "GrayLevel[0.]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             GrayLevel[0.],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"AbsoluteThickness", "[", "0.125`", "]"}]}], "}"}]}], 
         "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6876056544930935`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteOptions", "[", 
  RowBox[{"testGr", ",", " ", "PlotRange"}], "]"}]], "Input",
 CellChangeTimes->{{3.687604843064683*^9, 3.687604871747323*^9}, {
  3.687605644916546*^9, 3.6876056522419653`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PlotRange", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9999968914310025`"}], ",", "0.9999975297451876`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6876048485549965`*^9, 3.687604872056341*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absPlotRange", "=", 
  RowBox[{
   RowBox[{"AbsoluteOptions", "[", 
    RowBox[{"testGr", ",", " ", "PlotRange"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.687604843064683*^9, 3.687604889850359*^9}, {
  3.68760551036985*^9, 3.6876055135560327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9999968914310025`"}], ",", "0.9999975297451876`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6876048903433867`*^9, 3.687605514087063*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteOptions", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", "]"}], ",", " ", "PlotRange"}], "]"}]], "Input",
 CellChangeTimes->{{3.687604843064683*^9, 3.687604889850359*^9}, {
  3.68760551036985*^9, 3.6876055135560327`*^9}, {3.6876092613533945`*^9, 
  3.687609271875996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PlotRange", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6876092722130156`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"testGr", ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<Hello\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.687604899521912*^9, 3.6876049002099514`*^9}, {
  3.687604958314275*^9, 3.687604984302761*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$572#1"]& ]}, {}, {}}, 
   InsetBox["\<\"Hello\"\>", {2, 0}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687604979630494*^9, 3.687604984475771*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"testGr", ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<HelloHelloHelloHelloHello\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], " ", "\[IndentingNewLine]", "]"}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.687604899521912*^9, 3.6876049002099514`*^9}, {
  3.687604958314275*^9, 3.687604984302761*^9}, {3.6876055200234027`*^9, 
  3.687605632608842*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$572#1"]& ]}, {}, {}}, 
   InsetBox["\<\"HelloHelloHelloHelloHello\"\>", {4., -0.9999968914310025}, 
    ImageScaled[{1, 0}]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6876055650369773`*^9, {3.6876055954287157`*^9, 3.6876056335318947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"testGr", ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<HelloHelloHelloHelloHello\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Bottom"}], "}"}]}], " ", "\[IndentingNewLine]", 
     "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.687604899521912*^9, 3.6876049002099514`*^9}, {
  3.687604958314275*^9, 3.687604984302761*^9}, {3.6876055200234027`*^9, 
  3.687605632608842*^9}, {3.687605762598277*^9, 3.687605772293832*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$572#1"]& ]}, {}, {}}, 
   InsetBox["\<\"HelloHelloHelloHelloHello\"\>", {4., -0.9999968914310025}, {
    Right, Bottom}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.68760577260985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"testGr", ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<HelloHelloHelloHelloHello\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"absPlotRange", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], " ", "\[IndentingNewLine]", 
     "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.687604899521912*^9, 3.6876049002099514`*^9}, {
  3.687604958314275*^9, 3.687604984302761*^9}, {3.6876055200234027`*^9, 
  3.687605632608842*^9}, {3.687605762598277*^9, 3.6876058206926*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$572#1"]& ]}, {}, {}}, 
   InsetBox["\<\"HelloHelloHelloHelloHello\"\>", {0., 0.9999975297451876}, {
    Left, Top}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687605781983386*^9, 3.6876058214546432`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Left", " ", "\[Equal]", " ", "Left"}]], "Input",
 CellChangeTimes->{{3.6876089026298766`*^9, 3.687608912601447*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.687608912896464*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Top", " ", "===", " ", "Top"}]], "Input",
 CellChangeTimes->{{3.6876089155136137`*^9, 3.687608918332775*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6876089185287857`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Function", "Section",
 CellChangeTimes->{{3.6876049905721197`*^9, 3.687604998333564*^9}, {
  3.6876097498423347`*^9, 3.68760975169744*^9}}],

Cell[BoxData[
 RowBox[{"<<", "HokahokaW`Graphics`"}]], "Input",
 CellChangeTimes->{{3.687609753249529*^9, 3.6876097612629876`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "HHLabelGraphics", "]"}]], "Input",
 CellChangeTimes->{{3.687609764660182*^9, 3.6876097708705373`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HHOptLabelStyleSpecifications", "\[Rule]", "Tiny"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.687609781481144*^9, 3.687610026495158*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HHLabelGraphics", "[", " ", 
  RowBox[{
  "testGr", ",", " ", "\"\<Hello Kenta! Hello Kenta! Hello Kenta!\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6876097851073513`*^9, 3.687609827265763*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwUm3k8VN8bx+3MMCOUQiraJbTZkuckSqgoS7KElJI2SYtEIvJNqVSUvUjK
kjXrkeyyiyzZl8HMXPtOv/v7a16f173znGe75zzv+5qRsbt28jwXBwfHDh4O
jv9/6p1n1BUM3dJUzKdW9+6L0uQ5JHm9U8IYlq+cyKO88oA9EcGhqRL24FeX
5eT78jnoVzWnhEm4gHVzvsy1FxFgZj+T91LCG4SypSMfByTBX0XfQwESQZD3
2+jrxgcYIledeOwv8RGOxF9p7kE14Fb1tsg0+yOM9V67XSFZC6Y+XVwbLWLg
B+NrVV9QLQhN3fDICY0FU48epolfHdxpDLrDXP8Z2Gpr901fbgCjV62Ox7ck
gn3sd4+gTc3wUCB16xOJNBg0/nMq83gHyB154ZdyPQ18w1epCJR2QL3PtaG2
0jS4vWCHfml2wiZu+S8KrumgaBv//qR4F5QsfVRorM8Ap7hbqUkc3SA08Wbf
+qdZ0PR85P2Lkh5I33XrjW5vFsjzLKT/XuoB6+unZm6oZ0OzguxA4d5eSGIJ
ZxUxsmEtf11oUFQvnGT4aTjq5MKBMPOj8659EPz33qH05XwommEpLQgPwMG1
5h87TDDYDd9zsD44AMNnVHgFEjCIfzYvsnAegHXMu+cSdhbAfsvVzjINA3Dt
kvJmjvYC2J796mnB80EQtU+Ki1EthI0iozdeTTLgwqN15ur2hdDd0rJq7/oh
yIkOoNQ8L4RelPPD9ugQ2HdfdpwdKISf9WcUbUOHIN16m7z+65/gLWpd1qYx
DKfNo5JGx4oAK36RknUYAaLNmBotWQwnPdalsXxH4LG1wPlTh4oh45vFTf24
EUg9d00yI6gYVD9anMsZHAH61QM+biolsOO7rulZWybEjI52ytuUQMH8+PnE
B0zQuPlRvcOvBB5otv/87z0THO8IjqLWEgji84kgGphQ7NVyhs+9FDgbehJO
AAsseQPSM2NKgeNQ+zyPOQvGfdGKS9WlcNBrSEHHmQUbAj4VV64vg3/hYjn2
H1hw/+0tpReFZWB5yqR+FQcbxCS3/6c1UgavvTqzVouzIT60vX9CrBwOp4u/
idrBhuaoQ+9Nz5fDmlNfmvRN2LD7qwjfWoEKKB2O8huLZkO5QrFNlVIFfP+X
uUYunQ023+7kPDCvgLTZMllGCRsCMjqvd8dXwK2v7/6bYLBhk9qrypcNFdAw
7m2H5tiQnXN4i/ZiBVw6iT+IUAhgFCS0xR6rhNbzkY5oKwEeh2yVT7tWgtHR
ltth+wgQL1n5ghJRCfk+fsvuhwg4VOl22Gm0EhLu/wgtsyKg9ZhilLTEL7go
aq+/25GA67U9C9UHf4H0meSoda4EhP8++m3Xq1+g8J7we/CUgH2nlwR7c35B
x6HQgrE3BPxqTb4Q1PcLbG0dWAORBMx1rl47s68KUtLPPTFNJSDQrtI1zroK
SlJ4k2pzCNjS/6DO3LcKcpvilH/9JMB4uP9x7p8qiAr0YR+uJ2DEKaT7Cmc1
3LWY6yv+Q4AXYaCxXq4afMJ6y4s7CJBw5nhbe7IaDDcY+xzuIyB5MnXsoVs1
xNJMOXWHCDhy28Fgz8dqUDwyur2CRUDHnOSnvl/VsDljM+vXGAEu96s530xV
w8pXU+qGUwQI/ntoeWRdDWTFWPAazxIQfMnMWv5wDdQvQ/OveQI2NcrbiFyt
AZHGcp7KRQK+aXLZTb+ugfAw48fHlwnQ/Nx8ri2vBjp0RE3N/hFQKZZwvqC/
BlJA8Ho/qeXhR2o9Xy0kv15XP0tq58kve4vJfenYOOf9F6TO+vwmPVOhFuYi
D15LIu1xnH2oHK9VC4p+KOnkEgGHVzplhprWwv21qgfdFgh4Wm6q+tyxFq4b
qMpvnyOg4cHBrIcPauHp+a13LacJkNwrr+7yshY2jv/YvWqCAJsh8ZwLsbWw
NfDd+VMEAbHhnBrm2eR6BRIbVo8QwDrFzNWvrgWZFHdnmwEC9lKaD2j21ILA
v5arit0E3Mv/ka80XQsfLq/e7t1GQMHNr7CRWgcSwRMZ1r8J4N/+tmDVujo4
l8ChhKsJON7x8KDA7joY4opJiCklIOiVU+G8Th2szpPUFy0gQGb5YFHnlTpI
uPPI4kESARdT5XXqH9bB4SkK/UEsAYkXV5cUvSbvb/E9yxNGwP4GZunnvDqw
TA9yjvEj+8GvWTe0rg5EB7W8CtwJKDtQWP6svw6YJZur7JwJMIl7W3mTVg8q
oylFB84QEGrlZXBBph5Kb09VuR4joEf0StXpffUQUfK+UgURcM1dq+aAVT1Q
bEVunNxEwJOTrHr+hHo47cs6NzrAhlr+P6fmC+phcd8y17UmNojnFTYyG+vB
bpBlfbuYDR+2BjfVLdZDxRHXU1vI5ztvUav1vUEDqOnq5PKYsoEnZafFM5sG
WBc3V/jnIBv0HNa0e7o0gG2YbYHqTnK/qGP9PR/aAM12l/+GcbFhLDa4W5HZ
AD9kRdJ441iw2YjN+PlfIwT9rRR+95cJkh5H1B2iGmF3rV0iZwETViRE/kfN
bARvs7nng1FMmBc4pWDU0wj7s0oPKNkzobYg82aH6m94L2OdWNQzAveUHi7P
9v8GjctPAu6XDcM169YToQu/oV/GYFzowzDYP90TBSJNULty18bN7sNwgtF/
6LFGEwTOp74lFIdhU6TeE7FXTWC2ZhcvR+AQVAuvXKmAmuE/0RvuSeoM+Hng
yvk6k2YYMrx8WoTOgO+XSzJcLjcD4X4slq97ED6U3jHPedMMq4QzyxN9BuGO
x99wXVYzbHyp1C1YMQCyROz2c+/+wOU/VGYa9MPtajUInmwBjzCttvm+bqAr
pPeXC7TC8p0NryC5Gz4GKD1dWNsKt1UEijXduqHOYGuLtU4rcFoYtlxb0Q07
Klfe3PymFbrHw6tTVbqgs5SITVFpgwrbjjVLk+1w5EcMvepeO0RctbMyT/wN
q9NEOjg5O8G02WrQZfk7WD5dMO4T74TKVGHtP60ZEG3fX1ki3wk6CbEb6jPS
QH5VVtZ/pzvh3AWFnuQryaDlavN6VXInbDl6zyHfJgKUQ81igxS7oOZzeZJ2
YjS2tY61iuvoguMnPZSaCoqxt55USMhQFxw+m/c1pqYExyoHNvpPdkEkz4t2
wY5SzKTf079C7YbI57v/+M2VY1d8TG23cjf03ZLUyJOrxk83TK3MDSDj5q6N
H1FtwBk9h37VaPRASFdsXr1qG27SfTgWcKQHlHp+bP6Z0oanE/PFDU72QPyR
LUaq8u1YxU3NtsyhByzP2nrFSf/F38UUpwte9gAPf0n++fkOnKUtuSGF0QMj
IuLnfhp049Z4M53rEz0g3uby9LxPN55f8dpRYbkHHC6K/8jK68bqf4XT48V6
4Ysb9zmXnT04+xav3gfNXnjo5Xp7NaUX58aO3gwK6oUiqw+0g8l9uF1IIeRk
RC/kx0k+f9HbhxedL+eviO+FMwmV633E+/EBGBAIwL1ALKX0G7n14/zmtjCf
4V4wPvUl4hIawFigtNQV9UHBcs7+xsxB3HWVh7VXvw+6X2RIEH2DmOP3QdEJ
kz4I+lz1KUKEgVFUruW1y31w5dLv7PxLDFygljLm8KYPtil0OXeuHMKFjmFS
5sw+mBTaup3fdBinDl2+bD3dB6MaVcTbu8P440X1nHMc/fBwra5qYegw9rnQ
fObqyn5IUy1Q7O4exrp2Iu8eafSDxAU/FXWHEazW3Tnkd7gf1vg0efr5jmA5
m0S1Z4b9MCk+qez0aQQLWeu3BNv3Q+S849JY/wiuMfdZk/i0HzZbTf0ZsmLi
gj+nLqa+6YcrEUrnmu4xcbKZ7Pfvkf3gbXzqq/FbJn5pgs1+pvWDV/WPnzw1
TGxqNPfmT3s/REm722xVY+F23SuruHcOQNgKmaR1syxcVbr/vIDKAIgYR2+d
obFx/mFqOo2cE4/WXzxssZGNI7Q/Ga8xGQA5Gb2dxQZsbIe6X+10H4ARzxWc
q9+x8Smc1LvbdwD0MjZxaH9lY23NB3tUXwzAzt7PaD6PjTdrSDVoxZDrdQfc
4uxiY4aKiejpqgGIuecUeXMdgVsyNtpZNQ9AaYp8YK88gSv2jX+z6x4ApxVX
alrVCfxlz3OjK1MDYJ2xfN7ahMChKVZRzv8GQEr2i+mwLYGf7pIfu00ZhBe+
z8sXrxD4qmJ5oJf0IGwZHbif5k3gs4lvu3y3DgJ64XDe/DmBDXdeUArYNQg+
uRobvEMIvHsHd+1bnUFIszl+w/ErgTfG160POzEIR9Rs8jenE3jl9shr0eaD
EOjqrH8hj8BTWw4IJ1wh960b8Z9cfxFYs0er1P/OILSFuCY3NBD4cZiux8VH
gyDuqfonopXA1aePqxx+NgharOV/rV0EFl9pTGwMGQThdCdBnwECW9eYf+L8
OAh0layusBECx/qfPduZOAi0xuSLm0cJzNY5vzovaxDSzdKfSU0SWJnzcs27
okE4b5qPPGcI/CD3uu+dGtJfD/Nrp+YJXHLbFUxbSf964mmvFwlM33N/Zk//
INjJXxHRWSawGfthksjoIDTVjzmf+0fgyM++DsT8IHxRk9k5SmqGfcD6Kl4G
SJbfOzBCaqUNr5rjVzDAYG7lR2NS32kLfu4nxYAxo7Bz8qS9gjfhRy5sYYCY
9emHzuR6Aic//ju0iwFrgmR4t5L+GNLiM2U0GMC5+/LcUdLfkLKka/8OM6CV
pnm5bYLAPY/St/41YsClM2qObQSB5SCnM9uSAYI2LwX0yHw4zxe8DXZgQPP2
lRZbyXxlp5eccHVmwMyW9XdvkvnkuvGL39idAfsL4u4rkPnWk6/Hu/wYMNmt
7nWarMfLwebbwq8YwH9vIm6sksBt0X8VWWEM0Bt+JDr/k8CbrHsHK+IYsO2a
Uu+NHAI7SQxFxKUywPtezUHzFAIvPp8Uti9nwOHSVUa3wwmsrT9ferCRAcaP
NS0TX5H9x8fhub6TAXt2WMSb+BFY2l1wtJXkJAeHN11T1wh8QVUk7vs/BoSH
xqkQdgROnBC3eUMdArv5V0nmZD9rOsrWGm0YgofPmxa8VMn+2bzNT3HHEDRM
3jyltZ3sn66diKY8BKJPXOpvSpD9YqaWXKY/BHmfxi8qzLKxh7ZhINwegrOL
v12oSWxc9s9EV9prCLJvVTmfe8/GK3IsOBaeDsE1jUnpXb5sHLnL4XpG9BDI
LfOyd1ixccG6B4Y7q4fAfSljXTwXGwu0PhIQbBmCW3/QutRhFjZ8/aSA0TsE
Qce0iT31LNwt+Frp49wQ7BKWLwmPYGGuuS8rpDYPQ9XSOZEte1lYqkprAsi5
oFB354e/Eiy8N6rlt73aMJT/Hvkh84+Jzx/lf594bBjc/xkYGpUxcVmI3WYt
12FYztqTbW7CxM/VJdQvlQ5DBHdt7a0zIziOnrz2Wd0wjG8fLNyhNoILeg7/
S2kbhtlvU2m3Vo/gcX+XokViGALevv1WWj+MTdtqjgeuGYG59pXiN7WH8dr7
j89lXhqBi7sDFM6T+/k+Q+nD7TdHoL97zYUwJgMf35S2jfPBCMiJP851LmJg
j1/dLL2XI/CQc1R7xpmBe9YeuNORPQL+Jltf3K0cxJ/zJp7yCjHhud0Jy2nH
Aaz8zybjVCITPJx3ofSLvdjgWIGXzncm5FuFN/Qo9+Jz79efUClkwq9+yc2l
PL04UKVjULKJCTufe//LiOjBQ9csJHqWmDD3CWfr1nfj0C6T+9ePsYBbX2Oi
S64LcxbqaQUwWZAUyLVr1roF//LeW10iR3JPTPJDgeYirC5cyfWC5DodynYe
/cqfOC7EVsWCnGMvxKcn7sWF+FHis0jChIAXPpF6K2ILsPofhvOahwQwN4Zs
bOn6juN2hK12bCbvdw//r78jAmsNeSXzaY3CjPOHuVM9WXBXobri8pFR6K6Z
tvy6lAPJNyX6aw1GwUVaaJ3vmnxYt5wk8d5sFG6f/Tl7fMsPmBP966V4ZRSi
AyfufjQthmQNFZPTwaNA/5b1QvFjFawPHJn7zB6Fg3Ef+BSGmiDf1uNzysQo
nJ4QK5A92wzWe8TMc2ZHYSwmZlNuYzOENql//8U1BjuM7Qp/5/+BNdL+roT4
GET/bXJwftYKovHbJvbCGJy5t1OmVKIDeIvOk000BqvPafU4O/bAx9dz78uC
xqAiksOBGt4D2g4B+nUhYxDYIrDDvK4HvKjp8T0fxsA1RdxQQqUXlg15LvF+
H4NLT/0d6P96YfZvdL9e1xhwe2hck/Xsh5GZzo7fSuPQPtG7i3GQARkOzwv1
lMfhBHGI+9JVBng2a8bi/ePwPl7k0913DBDPDLvy+fA4SEYmaB4ZY5DzoMXi
fctxWJu3nfYgZAjeTTZJbPIbh0ueX2dSG4bhvP3jpeCAcZAtkotsnh0GpcZ9
3bRX45Dr8Pq6h/QIlKQGxc2EjQPHp13Dp8+PwJjzSZXK1HG4d13nvAwxArpj
VcbOnePwsPjq2ofDTBCzdVcd7BuHjFcMkzB+FnTUyq+1HB4HXcNg7b2bWOCS
/F+vztQ4TJgPK9dasCDi2lFnCcEJsDl+80tKEQscO2dNnq2YAOk0SvabvyzY
eyJOjVt8AuSyLT6NTbGgQoGfk7VhAlxbzG2pm9kwzSp6XqA8AeXRl1Jz7rPh
h5XLzX0aExA6Y8mv/4INT6s2msUfnIDonhGO4zFskE3wWhdkMAFiAX9uJ1Sy
gbV2Nxfl5AQ0b+PVoXSw4fvT7n53swm4r3HVrJlgwzEnlOBgNwGFOzz4y0UI
WNNOBLY7TAA7TZ/ClCF5Tj/CxejKBMS1R67x3EXAnR3L+/ffmYBzdae1548T
cOh9wvpk9wnY0GTX0mlJAF3QinvzowmwMz18ZZ8jAR+HcyrozybgsPnRCMVH
BFx9e2Kj46sJkCktCg5/RoCKdq9bcfAEiBxoZz4MIfl8zLVxQ/gEzOvaXm75
QEBFGHXn/Q8T8OlQ4MDHBJJ39cJ9muNIe1Iie/oyCLCe2dWxO3ECtMRmt77F
BIwZmj8f+j4BdScu3zSrISB7iTmonT8BVqxD3vZNBHjHe6LInxOQ+GJtSl87
ydNmK0MWyiYgilDqau4h4+eJGzOtnoCAr/KTBxhk/Mn79VIayPw07mgSZxHw
xaommtYyATo6Odft/v++g3pu4WLHBGRRW5I3TBGgmTl9qqh3Au6lT/oYzRIg
YO//df3QBLCiie7JeQLqV6zjdWOT8e2XzqIukfyc982qaWIC0rYd4nq1TMB5
R52MXXPkln83JCPgHwEKq1voAcsT4Puzom6e1LM/nRwY3JPAqzJp1Erqwusc
BYcok3D/Y4yKPKmfSgetiaBPQrVbt88oad+0YuuNebFJeJu/VmvrIgHrb+eU
m0hMghBD06V2jgDGxhOy39ZNwmx51BbmNAEptT33hDZNwpy1yIV7EwTcd3dt
cNg+Cc0vKg+6EQQclqPK/1SYBPF5j0r2MAErmsO81+2dhMSAE6t/9xPQ8mjX
37tqk7B85Nd+hS4CopWK9/3WnITB4lmj+RYCnP6efqakPQnSzUduqTUQoOzP
HPjv6CRk8YT+HKkk66/iCYPHJ2FM6IiVSBFZ/16xYC3jSZAwppyPzyHgVeCn
0TDzSfijJ8KRmULAluHqKGP7SThrWx24I4KA0Td280mXJiEwiuPvqyCy/oem
Twpem4Tbp25cuv6EgGNh0jyFdydB+HIk1fcGWT9DpwuKzydhjZmko9J+sn5L
//L9gybJfXnvByRPAH/8q9UDIZMgdn3fcMlaAt5x55SFfiS/n6meobxIPo8Z
lB3U7EnQC7tr/iWNDf7nwh6dx2T8Zco8LlFsMF6xq72gaBLCdEQ2pgewgXHp
dMDtmkkoDZ9ZG23PBrr0J6KvbxLMhHk37hJiAzJ99Ld3aBI8Sj+/OTvNAufn
Zyt72JPAyd73XbKLBU2caz51zU4Cv+IbK9UUFoQP+Fm3C01B/4mZJUkjFigk
O1Y17J2CTV1PXtbdZYLN0OGcerUpUHwnXzttyYSXshs/12lOwYec272JwITp
oDbvGt0p8DZ3OdHCTZ6zdw00Ki2n4Mhu+ZmNviNw7JDCl0LvKZhrufp+4e4w
PLhPDfnxZAqGpaSePTYdhuT0gccFz6Zgb2mDzNfdw7ByW4RdfvAULDQOmpQP
DUG70ArJ7K9TsG34toPFqSFwahrz+9Y4BX5iM4XWKxnw9FL6hchN0+AcH1ix
62Q/DKMEP0G5aRCYd9bYv74fjqyJiXdVnIa5HiTUP9IHXKVBbAP1aWh9Rbkk
7d0Hdze5uM6dmAbIkmaqJ/fChc7dj0+6TQNX/2aepZluOGiSHMNTPw1V25IP
rw5ph2n0pe+ixwz8Uh4WrVtVDi67i9LEf86CnlqI+cGOenxh74bIF2WzEBgi
Zv7NtgGfVr7/n1D1LLw3vPe6tK8B71ffa8fVMgvKWcf1/g41Yi6tj8Js9ixo
54fGXSaa8HMjb8diyTlIeKbkSB1oxfHXtTe4OM/BoHsBz3dVch5xjhQkbs8B
u/Vo5Tvnbhzgsjh9yX0OYkRif8p/7cbX76RVnfWbg/Zz9RvOrOvBKp6b3PTD
50BnRd2PvOUeXPScp0m2Yg72PtxhV5rYhzsTi/6rk5mHDHeb1l3Fg7iWxcPc
vXUeRuuuhKDxQVwgr2MQJD8Pp3R6b/StY+DI+GIhM5V5iBArPcVwZWC72JKA
doN5yN8Q9rhSZggPhJU9H7w9D5R7IeYWdsO4qV1gVNd9HiYUG+7Y+Q3jUqmj
hvFe88C75tXmiYRhcj4qX3ElYB7+xrD9E2eGsePrihfj0fOQeZHnm5vPCGY9
/fVqqWoePjg/+DH4hIk7KoUmrRvmYaTXIvdAHBNXU48ZF/yZhzXzHWViJUyc
6Fe18lHvPCj+MuDR5GDh697VrwXm5uHw2CSH+1UWtvlJn760PA92x8NvFfux
sBHXCdNK7gXYLPZaxD+ahXd71og/oy9A3JW3Uz6NLDzpVvtWbNMCpFUWO2rs
ZuO+7BWzLtsXwIEvhu+MLhv/njM83aSwAFT/F86j5PyecbtuTYjaAqgl3dz/
mJzvYzNE7s5rLoCXf1GHNzn/v50yarHQXgCWdXvHfCIb37lZH7LuxALISGuF
6jey8cUU0XkP4wVQqJlP2TzAxuZjJ890my/Ak/GTLbdm2Fj9WoPkR/sFKBqQ
lb29hsALjo3vt99bgBDrk2VTpwhsrGz1QsFjAfI8xguCbAj8lXPg8R7vBdB6
tLMuy4nkleCZGweeLZD7YqD760cEzjzn6aD1irS/c7hA/xmBVyhSrI4EL4Dm
04OOvsEE/lEsqWsUvQChz7HRsy8Elnzx4YDppwV482FOxzyN5EFL+T0WXxfI
c8Jc6HMugSu3pm+z+bYAVRtee7sXkTw3cWDd+QzS/m8IbCJ5zz2/RMwxZwH6
w6tE0+oJ3PTkBOVawQLJEy/HVrUQWMHkz/LN4gWQ9vohtthBYN8NtpN3KhbA
58Z1uwt9BO4aGRpyr1kA3tagMuMhAqtmOnd6NS7AGB/fnlIWgV94LTT6tiyA
/8z9wLwxAg8f86542rEAUtFBdSpTBD4kQSt40bsAZYoVjH2zBA7te53+hrEA
orvcKzJJPp5MWvflPWsBlioIpzySn4+5fYqMHF8AZvvhssMkX8ceVnoTM7MA
W9b7N50i+XtZJOu/+MUFEFD/+KqP1GZ/Dz5M4lyE3t92S7OkTo6rcE3jWwTv
D65iL0hNcTnllCW4CBetbjZ/Je3ZQbtt/opFCP1RY2CwRPI09bzZz1WLcMS7
/861BQKLNbEMyiQXoVt9zE58juThKFetqvWLII5EVx6cJnCR0z+V+k2LYBKo
95YYJ3lX1W9n8/ZF4I14MCdD8rsrt8jGdoVFuLfp1tE/wwSuqQ5Z071nER71
Nb0VJfl92ztZ+oDqIiRdUZipJfnd8/wX7pEDi3CybtBNrI3ALUp75witRVhp
bKjR2kjg3Yu57Mkji+Cw+o3h5moC+5fq9M0ZLIJnTmn9ZAmBNazNarjNFmGt
+pOXMpkEfr29q0jAchGuSr2meSQSmD15MZtmuwhHFx/dsI0hcMR/92JWX16E
xKaXj9JfEHjWlPv92uuLwHqy4cFWXwIbyj4NlLm1CAq+l+fX3ScwV1aY2w6P
ReDe8nRzhD2BLby33FDyJuOLSVTcdprAaSeSLux7sggLpVucVfQJfH6gwAhe
LQLllODlIUUC5387ekQ7eBHcXgb891SGwOLu9RpHwxbh4+Pn3zNECVwm1rf1
1KdFOKV2a0PUBBvvOMi/fCFnEYrauhmNJM8nx3/Z+qdgEbbThbfvCGXjvSsN
jY6WLAJ1OCp0inzeNQaDP+6oWwRnjtgXDHI/OB4gpz86sAjWEw0ORtxsXD9d
7WLLXITXXKcHTo2wsJnNzfD6sUVQPcnAVSTP2+zJHUtbXIQvMRGHt0eysHPL
seC7oksQr7jV7SnJ89Na4z+GVy+BvtCXENM1LOz29c2IhfQSUJ83N71fYGJv
j05NzW1L8GvEOjekgInfbL7Rz6W5BHfVjsk6azNx1o2g3U8vLcH5R5curtw7
gjXbVC2Xri7BujNPBBuER3Ch9l+fqy5L8Df2ubj4yDCuWL2lxdBjCS5UxfLK
Rw7j9rxMj1WvlyB4/ZMd8TzDmIPa9iu8YAnUJBqyAjIZ+Ei0jMO31cvwrrBU
+URFP94bTN9SsnYZnlvcu2/7vh9veLbQ1yqzDBqsfbnSTv14/u5vOx75ZXC6
UiX1VqgfJxg9sTZDy/AmUOdQ9NE+LMY5ZrJ0cRk64p9GF6f14M6zBdpHs5dB
TGD6RsbnDnxb+qxst+U/iDcZHqOk1GB5polg8zEOlLeg0rv9SDV8NzbA/oYc
SCX+KqXueA0cytO6qXmKAzGjeUOm5GrhzDPFtpjTHCiBp4Fnz646eKJE+eJy
jgOJXzC7Pq/WAAMuuXqidzlQNVfqy1z1ZohckvU/9pEDAW/I0tWhDpC/IKHJ
+YkD3Xr80nSVTSdkVguPp33mQLIFivYKTZ1QHbFovjaJA53rQdtO23TB0sGm
7SNZHOhah8eY5ZFuOPP4SblfDQdinLRTCuTrBTHhUYGieQ4Une6x3Ko1APV5
/r5HlzjQbtMNtvuuD8BLp818Nf84UGESKlIJGwDRijPcrTycKMZVv3LXNKl9
ipcIOify7EN9gx8GYcXCu3GpjZxIzoJHopzFgNrP+25EbeZEOx321J1aNQSB
p2uJLds40YmBs3L3NYZAOIOXtWsnJxK0GT3z4ckQ0G9cHzyiwommCNGj+9cP
g9CgTvtNfU7kdvmemJjKCPx63XVm7hgn8taMRntOj8BTbbeWB4acSLn1hRLj
zggIRic3PTHhRL+rLMzpWSNAtZKqizjLie6tvq+ouZcJFYIZJzbbcaI7ZoZl
00ZM8M82rI6350SVTQ6G6BoTKGseV6Zf4kRbzT7Ze8cxQaBhtLjyJic6mmF3
t2gVC8oe/qdt5MqJFu9dsZxVZIGf0pafTXc40a0h0bKsoyzgf2ZR0O3OiV76
M2J73VjAd7Qke8aXE02e+95f1sqCkhkbNXd/Mn/HTOytx1jwOHYhkyuAjC90
1a0H/Gzg5dmVTntJru+WNWG5mw08+H3SxlBONPSPZe7vxYZWDW3dznBOFCJz
aXz+DRuSspld76I4kYtlZkRHPBvOZBwQFf3Eieqk/vxaqmWD0t6B+KrPnIi7
TChMtZcNfCnPDj35SuaHt122f5IN3xI6XThSONFXDQWhl+IEPN7hR8tN40Qd
lOeNL7YQYPlZKfZ2Jnm9TXctlzLJhzEPm9m5nOhYVLfwnlMEdMjKXY/HnEgb
H943YUNAamS9wIVCTuQbJVYle5Xk3dCN6n9LOdGlJZ9zNY8J2Cv5qz64ghNt
T/Qc1X9JACXY5bJxFScSD3supBJG2lslzbOilvT//gWfwE8EpL0qDq2sJ+0N
me04/Y0Af5Gr+3x/c6Jn2qZ1AdkE2DwXr9b6w4kWHk0a7PpJgOB/Dv+y/nKi
p7OPtv2oJ6BLYEXwrS5ONPahCCWQPJfx+LvSrl6yHxx1IvhI3nvKY1vO7Cf7
70vJliqSB+28KHZxDE40oZKQyzFCgCpHyvy5EU7kWsd1NIrkSdqDM6/WszmR
SpBrRiLJmz0LXPJto5zIwcJqfNsMAd/vfil6M8GJisVTmMIkPz+bOWV1cpqM
f6V48DmSZ8/dWpyizXEiK826oY0kP6tOfHxWvsCJOA3qWwxJHqbfOLbVZ5kT
7RpMtBsmdR97CiNOLqRS/OHhKKmzncJPL3JzoaepQcrnSB04fHgsk48LnQgW
8tb6P49fJJ7cpHCh9xcOXHtGrqc+8FZWUYgLPefj4DhC+rPCHuUM07nQtl2N
yIn0d6CbcSpWhAsNQZfmMhlP7tkXTNuVXEhndJSyRMb78q+aj/RqLlQveTft
IpkPB4se6RYJLmRs/eLUwQECNFr8M4LWcqFH+TPLj8l8iprtOWG4ngulKAvX
qbWSvN7YNigoy4UOoc4Bc5Kf8056e5Zu4kJMAzGbQZKfX9bKSzzayoXK9s5b
95D1u3j89zdNOS50MthHQJ/kZ81f7nrz8lxIU/motwzJz2J6W3rTFbnQmn33
Fs/HEZCvc3vlzn1c6JilVLDaKwKCfq5PYKhwociSVdLlvgRcOlim81GdC7kY
B9qWuhGw8oDEbSnEhdQsuwVE7Ai4vDenhaLPhWqaOx92biWgoPb31+/HuNAq
TbU7KmsIWHVl1MPBkAsVn86w5hUgAMds3lJswoV+7dq4jmeADWKrA509bch8
yvm0vn7Phoup8TqK57iQ4RVmWowvG/JOFK/pOM+FpIStOBVussHBbz5//2Uu
lCu7z/qzLhty5uwFZ25xobYjyV9MWCxY8cajI+YOF5q6WPtkz28WnN/97pux
GxfqCD46/jSXBcKXa8xSPLnQO5GzkmlPWHCuXe3jlf+4UKFswIkuaRYIYvqB
vkguxCdiNSelQPK0xfYVrz5woZcz4niYxoT0mUO9B2O50I/wT5MarBE4q3T3
ScQXLnTjcNPUlfgRSI3q/X0mgwup3uTPEF0/Ahbe36/WVXIhiY892mNjQ5C8
oeGgZzUX8u7bkAAVQ8Cbx1qpWMeFKMfmXkpFD0HSlGzO0yYuxBa1jH5gOATc
DgH8ut3/r8diOW8cA74ctYvMn+ZCV/NMLfK1BmGvvIwmzHGhV1gn0mb1IOTT
u9rwApnful2pn0cGoLbBavUPDm60d7hocPerAZi0Mn/2k8qN3hy5bra3ox80
nQ3vl63jRvquDSMB9n1Q+07zdP1hbiTTtmfnN5VumBqRXDHwhhupc7+923+k
EdJPHeEO0uZBTzhMPt7LqcB++t991h7hQTteL30/mVaJLQ9tF4g5yoMeBKXJ
5n39hbn2CNIyjvOgP40xIWqh1fi4aI34n9M8KPb6r8UU9TrMqDWVW3uFBwlR
tSTD+H5jyeMXjD6+5kFSGzq3Wlm2Y5ZOc4N8MA8yrWjk1K9uxwUHdE3T3/Gg
28++NJbAX3xhp5xFSQQPCrzaZWsr04FThdj2jM886Fn8Rcexjk5sUHnrjnw+
D6qkKswtR3ZjD12fiLQBHvTdIOCddHUfrre+aKk0xIM2denX2y714U239CW+
jvCgN3Iiu0zl+3FFlMirD6M8iDPrwjuDJ/145ULY45fzPGj/0eYOSxjAcQkZ
V67TeVG9a7nxrfeDeP5niBxzBS9Klt8+4Ujy+bHW+4MOYrzocVffRj5iEI/z
HbI9u4YXlUp/K5I7yMAaNjXGx2V5kXFsHGVtNwPXijL2yyvzopc5122lhIex
7PbK2U+qvKic7Twvu2cY34LE9I37edF0URajxHQYSzq5KEohXnT3EYrrDh3G
9sUcG6l6vOjEMaUDxptG8OxtCSrDiheJVHIJ4fVMrPdsseScDS86xtDOOXGA
icM+dj7qtONFyp9tl1zOMLFWXcxSkwN5/cIRT7dXTPxUbvdY8Q1elBoZU+xE
8rnMX70/H3x4yfMxu8q3mIX9C/cnmfjxoqWvMhkSHSw8/kn+Mf9/vOj3o89N
m6dZuNCZvvdyIC86/eOd2JdNbGwvUP9893tepJjudNTajY1/sQov9IWR8bxh
JGY8Z+N9DakH3kTyIpbxjNLjD2zMF/56ZC6GF82d1JZ7Us7GcXvMj/xIJu2t
/NS4SpjkXwm9dTdTeVFLMmVMej2B7y6rT23K4EVZiV8/vVMgsF752g9+ObzI
1P9L7SjJFymJtHvq+bxI40okLjcn+Tho2ZBZwIsuC1C1xB0IPGLdtXyihBed
v+O0iuJJ8rl23W/OcjL/3THTif8ROHd74dfUSl6kLtP8X+kbkpeFUx+drybj
6TL4cDKKwE8nP5xZXceLxp9U0QxJ/p5sCdpV3sCL1q5/F45J/rbCPgJuTbxo
3fLVHVF5JD/7O2R0tPGiNoPA0KwqAr+5djogsIMXOeUXqY6S/PbP+Ki9Vjcv
simoR8Ek311UV98/2Uvenz/05ls3gWvX7xCNHeBF1wy+r9cYJPmad+2Q2RAv
8gp1KlRhEjhyWKiAwuRFN8bTLn4cJbBA7dKbHDYvCuAtWH44SeAb6ewrV8Z4
UZP5gZu1MwRufdepvX6SFwUFWGU+J/lay7NWqm6aF31+X5+PSb6OP/9j3GuO
F30VrfWwIXlYVD+lfO8iL2pAghM3SF6+p/QhcmCZF70wzhGbJHXvqqDbwZx8
aIVzSOcAqQ0WvI/r8fAhq7wuUz1Sp3Xd2rzIx4dszY/fX0faW1tyYTGBwofe
WciYkOc99vli1nBWiA9FpkkOrSH9YQfqxosI8yEHmrsWkP6auqo9/CnCh/RD
hK42TZC8aCF3+tZKPtTVTnfrIHl6y0Epxa2r+ZDvJT03sxECP9sixNciwYf+
BvA9Is9fPCO41O6/lg/9nqd+DiV52maMlaqxng/lWEXwXWol+bKpw58tw4fm
2P6ZsQ0EVsqtsY3cxIfCpsRaTX4RODiqQPXkVj7UCP+euRYRmMP3mzCPHB8S
Dnw+J5BL4EtO0QPp8nxI8p830FIJrK7iHSSxmw+J6dM5nSII3GQnoRy2lw/x
2IxWPnxN4JvPEps3qPChtQErr68l++1r/x/JbRp8SEl8K6PLhcC6Ildzv2jy
oYGvxaKClwjcr8FtrXiQDx3x4C3KtiTwuqCdUcqH+dDTLafuf9EicDYu1MrW
JeNxXGIw9xLYbMSs74A+H+I44PkpbQuBA7W8tuoY8qF47m9zzQIkr481JZw6
w4eYWS9uu5SycfhapxPNlnxob3X9MDudjffrco6dOUvWz1g8Yox8Pl0iduy1
s+dDrfWU/sAHbDxwzDP7+lUyH2bCvKDAxl53V1lOXudD975zv+SWYOP1MfFL
t2+S9TH+/fMkydenFxuRxx0+dK1us+PLJhaujN9eGuDFh1SMQm5E3mbhi035
F0V8+JBRPn/5T2sW5uEypr725UP//fF/76LDwprmD46FPiX9Sz6q6SnCwsn8
DQ3xb/hQrg5/qt5HJg6yv99VGs+Hdr2ryRZMH8FKgSJe+gl86Fsjs1T19Qiu
yondWJPEhzrFtunOu4xgPrG6C01pfOgj9nynsWcE3/mxmdWXz4dKRc0SfsUP
Y8t1NXOcDXyoaBNeDnw8hOkSzuk5v/lQcEzbNJ/VEP4hturGrT98yPK0Z4bA
niG8hWLBYPzlQwlOGwNT/jIwMTHQVMPgQzeaRdTTdzKwV/lyatgy2U92CZe2
Z5HniYvCVTU5fvQpgMYof9SLz1yr2z4hz4+2ttXGnTrWi2mOLv1fFfnRvv1m
M97ivdj5bLblhn38SL/s146eTz14v95hfX7Ej1r4ByqjS7px9Xrrbb9N+FGO
v8Lug8OdeKoioOf6Q34kaNd0hKH+B7cL/r64+IgfFdbP/DQsasaFBmsJ38f8
SHqwR+/MsWYcWB2/EP4fP7IawYNm1k1Yrr50ZdVrflRgOpu6634jtm7hPLI9
nh9ddWuO5ftci0sGb33prudHclxZeiaff+BgHmuXk5sE0EyEp0nP7VxYPrd6
X90WAaRakpmt7pgP9j9rp05sF0DzLw22CysUgJLXodvHFATQ6lxK+N71hVD2
b9s9XVUBpNZ3PG7dcjHMzE94aBoIoGPjdQ+UvlSB6diT/+RcBJBdp6zqSeMm
yDU8ZPDZVQD1ZhHJyeVNIJu8KLTtrgCirU6PzdRsBvbVa882PyDt3Wrk+b71
D/gwjV9s8BNAlEa/LKOpFkgbXP9WPFQAjUvlKTu4/wWxjvRoriIBJPSjSyVZ
sgeeCbm7Z5YIoCnzf8lhJ3uAul/7tFO5ALrzXclG1b8HuILraU3VAshzo+Gt
G7M9MG5E3PncIoAOR/ZYNdf2Qm3xthOGhABqEtIzD7/eDwaTxHbecQE0HBdc
zozuhzLZTJ7sSQGkacB5u6WxH7CHTvbGeQHUKP+cx19lABLV7DbP8FCQb8Ly
V8XZAXia8H4hTJKCrON27a47zwCBdrumk9IUVOZyNirsBQO8qXLf+DdQ0Mbk
H7SFXAa4OXy/cGMzBd05aFF7XnQIHGV+12krUZBqabTgQOYQ6L6mx43oUNDC
g4bbo8xhKPr52ytSl4L+5W7TuyUyAmg81MpEn4I8LT9Ve+wbAZUTO8SwIQX1
CQ3Zb7w/Alsoug9eWpDrO0l4vuJmAq/7Q2O1GxTU/PizV9A8E9LGmHP4JgVd
wJV1uqtYYH/hdMRhVwp6PM/47K/IgqITisOn3ChIMO2uebodC7xl/3pc9aGg
OM6p5vc/WbD3re7mKV8KCvSJ8/7WyoI+wbQKN38K4gix/WY0xgLtKf9VT55T
0C6Dh9uUpEn+L1P98iGEgmxsHmpZXmNDmsZHQ7lQCqKuqXmb68UG+2/C08nh
FPT0U0Hzx9dsKHo3gPI/UNA9+wJCMJsNLsInB7Rjyfg/+qn6V7Jhk3fef5Vx
FBS7+vKx5+1seHQlqOlPAgUd83Osk19iw+6ef25nkyloJGZ7QZEQybeml2UG
UihITOHovR4pArSQltNEJgWpF72wT1QlgEtslJNeSEGGTw7weTkRkOJr8Smo
iIJ0W+pVtO6QPL1YYiBVSsZTmxXw+BEBhf1hb7f9oqCxczwz74IJcD5DOZBU
TUGUweuZjtEEyNa49Oyro6D1m7Sm874Q4PVdf+ehJgp6naBgzc4lYPfOzPry
PxQUT0Qfqiwi/YuSvWPYRkGm3QobdvwieVL8mXTzXwoyMfjVRCN5U+u/uUKr
Lgr67GdrcJPk//F/9hf7esjrgz8cLDoJiHappV3upyDXVYkiJX0EnBzanzo2
SEFfbzfuTR0igNP60+k7wxS09kFdniybgOR60eVlJgUljSq+XzlOgM2RBx98
CAqq2nMpz2+K5OvcIV2hcQq66dMv7jFL8qSSCfvlJAXh3YvvZ0j+vh5T8Epi
hoKKiye0xkk+3yAprxY5R0EdO7h4rpH8XvvsbceWRQoyaDRouULyvSc3t3fC
MgUdKWXks0mtdOfq9r2cVHQhvTVljNRdzJbqbG4quvJPPN31/+8DbHVcDvJR
0b2Mh6XupD3UlCxRJkBFr4LYLL4lAkb11uLjglT0nrVBQXSBgEjsa/+bRkXv
giufR5D+Gu6doFiuoCL3usC1SWQ8HJ+tk3pEqUhKjKsLkfGWMJuvRqyiIk9K
+L4FFgFPlYwULNdQUZRMx4wMma+TLhWsNVJUdPHgjgPpvQSs/n4o4bc0FeUs
vF2X/peA9oVcp5cbyPXWdmXKNJP5B2X5ExupaHHbxa0LNQQolG77UraNipKs
RFdMYQImqdGOPjuoaGH5UMOqTAKyj0vJaSlQ0aWtDRz//32FThPtc84eKrrt
p2dACSGAKul78Y4yFRUQV8q7Ash8WnFs26dGRTcfnbu2xYsAy/7x2ERNKtIL
URVZukj223anC5cPUtGGB+cePrMggOHUv3mbNhXt3j/F9fwYATcnmz9GHaWi
ut1p0KFIgKqqkb21ARVlOkl579xAwLJbxUapE1R0ituCyRQmwJ87LzrImIqK
dZzN8lhsMDyibGdkRkXhw3qz1W1sEP8vSYZ+hoqauBdmjcrZEC0aHel7lope
ih10TohmQ5aMb/g9RyrKqnikWXScDQ/Oc1irXKEiIdqmEkdVNmh/vis9eY2K
rBPLI31k2FCr5BR65RYVSZsQsxLjLGCA0TsbTzLfW/3Plz9lQeKjCnPpR1S0
abXPx3XOLHApPSTR6kNFLHOByhFTFvw7rhx86j8qSl8zVkqsY4G4tdSbw2+o
iPNOb+vXOCa0RwWZcIdQ0XVpl/CaJ0yI7qetKnhPRRmuWm5XHZmw8wpHkFoU
FW1pW1MqK8cE7fv9L+S/UlGu1jkJ1w8j4PwuKUC0kIq6vJeaTz4YhszFd76F
RVSEpc96KZ8ehkXrxw+dS6loRbVPzcddw+C70epW/S8qWtrvyr2pdwhCv1Kt
XjZT0eXP+9cWoCEozj8vL8qiIrlMhV7hwUFY0ytVKbJGEKULtq68098HVjr8
xT8kBdHUmOxr2ZQ+iP40nn9DWhCtTHXsuf6gD+SdylPqZAWR/cbcB4ur+uDg
lOu7FzsFEU9Nj9EQ6gVH/vpLIocE0f33RovDj7shb4efgMhVQRRt2nG2Mq0N
lBtXV728LogsJ36lLmu1QfL9Ty9W3hREs7xVp8tqWyG6qkRyzR1BpN8e6rV5
pAX8rvHuXO8liBocL25SlfoDJ1O9jHa+EUSHvv/rO+rYCIPq7u+O5guiI0re
FLeochDRc5b3oguhiRLbZN2yWBz5Q1hQXUQIQWm5LF3oC1ZSSxgaExNCMS39
x0+fSMLHtzFibSWEUOSHr8/Fh1OxP5+1zMFN5PWXxnGWjrmY5+dRcQ51ISRX
qR4tFVeCp/fLcDw4L4S6M+N1vN83YJ/U/I59F4XQX7bhDQfpRrxyh2Uey1EI
1TbLEOzwRrxH8u09q+tC6MzA3c/dkb/x9VmhKQ03IVR35f74qshmPJQ2O7QQ
KISsFD8n5j9pw+07axvu5gqhpazP3066d+OIERF3biyEVvm/2BiS0o3tPp/a
EvBDCB3RsDwSMtiNhzY134ksEUJ2Zx5Z/DTswdNSHdKltUIos3Vx8tP6XixC
ZTqs7BdCnx3kkjiS+nBj6U6R8EEhZM9tQffq7MPBPteytw4LoQtnV3slC/fj
dZwTQvsJISTf2R0vcq0fy8/OfbOdE0ILx/7a124fwIcH+BcTaTR0+xF9OfzZ
IKZ8PBqjuoKGHOzlW95lDeJftv8dLxSlofo/d11U+wbxqb/0qN+raejBX+KI
qSoD2zSuOrwoQ0NGlo77qe0M7Fa4MfCoMg0JHuMVL10xjDU9z6s1qNLQSv2i
3pf7hjGX5qcey/00JPZN+9W0+TD2y5Lbdx3RUFQB0/RR1DB+k7yr9Y0eDe1j
cAl82DGCk8NhU581DelVMzR8djDxxL0JfltbGlr3WnZoVpeJlc0+jfw9R0M5
B2bfclxg4hxh4dTmizSksx4fqghn4hLPjoOVzjTUq/pOcr8gCwtYvdyse4uG
/gs3XX1oMwvrqx2mFN+mod1D0VVtmixcO5ZQm3+fhk6VJHbnXWfhNjv3symP
aejzyH0b9RoWXge7Dik+oaGDNFpzXj8L20j1b/n6Hw0tOh/fVrPAwgMNBuyY
QBo6lPVW8N0WNh7VXuse8o6GxjT5qGWubLxHptZGPIyGfqT8e/DtCRu7Lj3S
fhVBQ43mGZZbQtl4IX1EMOAjDaVNaah/w2zMtzXnnWciDckaJiprcxL4KPe1
B0vJNMQd5hj+cAWBn3bK2t1LpaGwHkUn3fUEFgn23+7ynYZ6zoyZ39hPYGMX
TdpYNg3ZeTrSG3QJ/MZwfPRKHg3FrmMY5ZmQfE45892hkIaKrrkXyl0l8Nl+
WmhfEQ1p0U++TLhL4OgfPzxsS8n1bGOVv3sTeOu97UcsftHQ+tXzJvYhBHY0
/Sv3p5qGsiKEvHg/kHy7+wXdpI7sB+OSvp1fCbx7ZPb38SYaunNMtkgsj8C3
Sr9mVf6hoaRixFFH8vX3DzZhum00FFT6b2wlyd/zHisfFv+loWbVaPfOegIf
sCyz1+qioYT76k+UWgjsqXpfF/fQUHZT/CJ/J4ELVyrJa/TT0M7SmB/n+wjM
O9YrnDVIQ+yziT+PDpF8XfV2Yt8wDZW9XDOayiKw/2f95hQm6e8divLHMQJX
+fzLViTIer+8/VhyisAr7FLDv47RkDTnjkbxWQKf1HTw2j5JQ3zZeWIh8wR+
LSl1IXaahuaS3++PWiTwn+nqoxvnaOjsEpe24jKBJRu8dkYu0FDJDPfWQ/8I
bJWkLCK9TEN+hg+72kmdcWaWXstBR9m+Em5zpKbzZQs94qYj4xq5w49J7fDN
jarMR0c3BrMPPfr//wksDwgMCdDR+waTO6PkemsE/vGGCtLRxRLaSBXpz43U
Au4TdDo5T7vFSJH+Vlh7cXKJ0NHRLzmpLZMElqVq/0sTo6PhNzc3CZDx3kvn
XXIQpyNenl8Cn5gEbrApnZeUoKNqw5suGYMElhd6MlslReqoUHflHgJ7Z+pN
e66jI8kH/zS2thO43U5oco8MHe2waa7y+03gffTqsYGNdPRqf+8xi2oCD9gb
sQy201FW+4aIU/kE1lwhNvJvBx3ZLlh+v5tO4Lc5jYwUBTq69bDLUITsD13R
031r9tKRbqvFl9dvCRyZJ9FTqUwn5yfbcq+nBJ672Nb5QI2OJqVK1/V4Ejge
W7f1adJR6SaVQ7MOBOa6vKHl7UE6Eh5S8Uo6Q2AL8Z4mPW06+tno/afFgMBC
V87XJx+lo3Xvd5b4KRL4qqRT+X1jOlquYNLM2GxcUryzVNGMjvSvbLFObGfj
9TeIoh5zOtrDHl+4V8HGtaXOBbpn6cjKsPvSrY9svPvW3cyVjnRkbyr6btaI
jf037E8vdaKjhfCKWm4NNu6tXEy5d42O8C3Zrb6b2ThI1jOxy4WOJL4eK5+Z
ZuGZmscxXz3oiFM49vHTVyxs6Kb74awXHb2dSDCwv8vCcVuoUaI+dOQptRSa
ac3CZ9wDQu/409ElT538+q0snCsX9Er7NR09inv9jZHKxJ4+UQ/b40nt+98R
gbQRTLvNr2ebQEc7kzR3bwwawe8uXhEdSCL9x8m76m+O4FR9tQ9EGln/c/qO
7F0jeECkrogL09Hv+/uWd34exvrhHALbG+hor4hhM/Iewn+eX6hN+E1HH0Lk
OtqshrD9w1/Bu/+Q9pySo8RUhvAD++DtGn/paLOIHrZgMHCynJL+iUE6cn52
3+DsYQYWzzz77NYCHVGs6FAwOoA/xBWbzi/R0VSM5bUbRQNY6d2O9R4cwqjQ
Ybdf+dsBfNR9JsmPVxjt8SxTvHFgAN8/9LzuvbAwcr3GVfbNux/31OSvLNwo
jJaHD4695e7DCQzp93QDYTQSEfRTpawL+4X52HQcF0aOzqGP+v7rwvYnWZsT
jYSRCLYOQie68Nrc3ORjZsLoT9uPQPH4Tuz/3KLkqZ0w+skjb7M6+y++qBwy
Rr0rjO59c/3ig1uwrPdKXf5YYURx+ZiMbtThZdX7tOY4YfRdO/nx2qFa3MLq
rY/9Ioy4vg4OxNjU4kCzVKvD34QRP//OM2/DqvE/uZM3fXKF0dgxkZHT/wvD
ADz/T8q/3NGPngPTD0CHNJzaIJzBv7iG92PT1Q9AHfFtlf+DwL+UO18po9gP
QKJu8Y4b176/S6UutELeD0Aka3Thm3O6v7p4zcmB6Q9ALirlfeamsb+WLTWP
UewPQAq5dzyO5a6/ceKcVCHvD0CQmyzUuHyqvyhMbN/A9A9AJQUJDaCpob8E
AdSkkPcPQMGIOGwPf5q/4LU7amD6D0DZMnmKXaqRv7xqoy8w/Q9AvloVCauq
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$985#1"]& ]}, {}, {}}, InsetBox[
    StyleBox["\<\"Hello Kenta! Hello Kenta! Hello Kenta!\"\>",
     StripOnInput->False,
     FontSize->Tiny], {4., -0.9999968914310025}, {Right, Bottom}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6876099621664786`*^9, 3.6876099807785435`*^9}, 
   3.6876100325995073`*^9, 3.687610062793234*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HHLabelGraphics", "[", " ", 
  RowBox[{
  "testGr", ",", " ", "\"\<Hello Kenta! Hello Kenta! Hello Kenta!\>\"", ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6876097851073513`*^9, 3.687609827265763*^9}, {
  3.6876100863465815`*^9, 3.6876101001113687`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$985#1"]& ]}, {}, {}}, InsetBox[
    StyleBox["\<\"Hello Kenta! Hello Kenta! Hello Kenta!\"\>",
     StripOnInput->False,
     FontSize->Tiny], {0., -0.9999968914310025}, {Left, Bottom}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.687610101032421*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HHLabelGraphics", "[", " ", 
  RowBox[{
  "testGr", ",", " ", "\"\<Hello Kenta! Hello Kenta! Hello Kenta!\>\"", ",", 
   " ", 
   RowBox[{"{", "Left", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6876097851073513`*^9, 3.687609827265763*^9}, {
  3.6876100863465815`*^9, 3.6876101121500573`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$985#1"]& ]}, {}, {}}, InsetBox[
    StyleBox["\<\"Hello Kenta! Hello Kenta! Hello Kenta!\"\>",
     StripOnInput->False,
     FontSize->Tiny], {0., -0.9999968914310025}, {Left, Bottom}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6876101126640863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HHLabelGraphics", "[", " ", 
  RowBox[{
  "testGr", ",", " ", "\"\<Hello Kenta! Hello Kenta! Hello Kenta!\>\"", ",", 
   " ", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6876097851073513`*^9, 3.687609827265763*^9}, {
  3.6876100863465815`*^9, 3.687610128406987*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
gb+XHwv1//8PQF0wjc7jNaG+u7chyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$985#1"]& ]}, {}, {}}, InsetBox[
    StyleBox["\<\"Hello Kenta! Hello Kenta! Hello Kenta!\"\>",
     StripOnInput->False,
     FontSize->Tiny], {4., -0.9999968914310025}, {Right, Bottom}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.9999968914310025, 0.9999975297451876}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6876101287280054`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{952, 958},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 2, 198, "Title"],
Cell[CellGroupData[{
Cell[780, 28, 322, 8, 34, "Input"],
Cell[1105, 38, 23750, 403, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24892, 446, 101, 1, 79, "Section"],
Cell[CellGroupData[{
Cell[25018, 451, 190, 3, 34, "Input"],
Cell[25211, 456, 192138, 4613, 2195, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[217386, 5074, 226, 4, 28, "Input"],
Cell[217615, 5080, 380, 11, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218032, 5096, 344, 8, 34, "Input"],
Cell[218379, 5106, 303, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218719, 5120, 302, 6, 34, "Input"],
Cell[219024, 5128, 294, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219355, 5142, 413, 10, 83, "Input"],
Cell[219771, 5154, 23796, 404, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243604, 5563, 866, 20, 155, "Input"],
Cell[244473, 5585, 23892, 406, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268402, 5996, 898, 19, 155, "Input"],
Cell[269303, 6017, 23832, 405, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293172, 6427, 892, 19, 155, "Input"],
Cell[294067, 6448, 23854, 405, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317958, 6858, 140, 2, 34, "Input"],
Cell[318101, 6862, 73, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318211, 6868, 133, 2, 34, "Input"],
Cell[318347, 6872, 75, 1, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[318471, 6879, 150, 2, 65, "Section"],
Cell[318624, 6883, 131, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[318780, 6889, 142, 2, 34, "Input"],
Cell[318925, 6893, 177, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319139, 6902, 225, 5, 34, "Input"],
Cell[319367, 6909, 23977, 407, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343381, 7321, 356, 8, 34, "Input"],
Cell[343740, 7331, 23898, 406, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367675, 7742, 321, 7, 34, "Input"],
Cell[367999, 7751, 23900, 406, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391936, 8162, 311, 7, 34, "Input"],
Cell[392250, 8171, 23901, 406, 260, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

